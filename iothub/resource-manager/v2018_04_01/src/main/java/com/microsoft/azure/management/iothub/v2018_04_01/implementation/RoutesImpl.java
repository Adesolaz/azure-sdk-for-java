/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.iothub.v2018_04_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.iothub.v2018_04_01.Routes;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.iothub.v2018_04_01.TestAllRoutesResult;
import com.microsoft.azure.management.iothub.v2018_04_01.TestRouteResult;
import com.microsoft.azure.management.iothub.v2018_04_01.TestAllRoutesInput;
import com.microsoft.azure.management.iothub.v2018_04_01.TestRouteInput;

class RoutesImpl extends WrapperImpl<IotHubResourcesInner> implements Routes {
    private final IoTHubManager manager;

    RoutesImpl(IoTHubManager manager) {
        super(manager.inner().iotHubResources());
        this.manager = manager;
    }

    public IoTHubManager manager() {
        return this.manager;
    }

    @Override
    public Observable<TestAllRoutesResult> testAllRoutesAsync(String iotHubName, String resourceGroupName, TestAllRoutesInput input) {
        IotHubResourcesInner client = this.inner();
        return client.testAllRoutesAsync(iotHubName, resourceGroupName, input)
        .map(new Func1<TestAllRoutesResultInner, TestAllRoutesResult>() {
            @Override
            public TestAllRoutesResult call(TestAllRoutesResultInner inner) {
                return new TestAllRoutesResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<TestRouteResult> testRouteAsync(String iotHubName, String resourceGroupName, TestRouteInput input) {
        IotHubResourcesInner client = this.inner();
        return client.testRouteAsync(iotHubName, resourceGroupName, input)
        .map(new Func1<TestRouteResultInner, TestRouteResult>() {
            @Override
            public TestRouteResult call(TestRouteResultInner inner) {
                return new TestRouteResultImpl(inner, manager());
            }
        });
    }

}
