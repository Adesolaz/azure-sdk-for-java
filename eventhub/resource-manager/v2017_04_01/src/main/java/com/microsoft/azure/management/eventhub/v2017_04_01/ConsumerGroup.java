/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.eventhub.v2017_04_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.eventhub.v2017_04_01.implementation.ConsumerGroupInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.eventhub.v2017_04_01.implementation.EventHubManager;
import org.joda.time.DateTime;

/**
 * Type representing ConsumerGroup.
 */
public interface ConsumerGroup extends HasInner<ConsumerGroupInner>, Indexable, Refreshable<ConsumerGroup>, Updatable<ConsumerGroup.Update>, HasManager<EventHubManager> {
    /**
     * @return the createdAt value.
     */
    DateTime createdAt();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the updatedAt value.
     */
    DateTime updatedAt();

    /**
     * @return the userMetadata value.
     */
    String userMetadata();

    /**
     * The entirety of the ConsumerGroup definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithEventhub, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ConsumerGroup definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ConsumerGroup definition.
         */
        interface Blank extends WithEventhub {
        }

        /**
         * The stage of the consumergroup definition allowing to specify Eventhub.
         */
        interface WithEventhub {
           /**
            * Specifies resourceGroupName, namespaceName, eventHubName.
            */
            WithCreate withExistingEventhub(String resourceGroupName, String namespaceName, String eventHubName);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ConsumerGroup> {
        }
    }
    /**
     * The template for a ConsumerGroup update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ConsumerGroup> {
    }

    /**
     * Grouping of ConsumerGroup update stages.
     */
    interface UpdateStages {
    }
}
