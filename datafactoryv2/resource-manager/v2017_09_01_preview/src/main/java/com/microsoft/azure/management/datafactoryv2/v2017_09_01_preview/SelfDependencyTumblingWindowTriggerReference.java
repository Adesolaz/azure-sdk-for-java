/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactoryv2.v2017_09_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Self referenced tumbling window trigger dependency.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("SelfDependencyTumblingWindowTriggerReference")
public class SelfDependencyTumblingWindowTriggerReference extends DependencyReference {
    /**
     * Timespan applied to the start time of a tumbling window when evaluating
     * dependency, pattern:
     * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     */
    @JsonProperty(value = "offset")
    private String offset;

    /**
     * The size of the window when evaluating the dependency. If undefined the
     * frequency of the tumbling window will be used, pattern:
     * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     */
    @JsonProperty(value = "size")
    private String size;

    /**
     * Get timespan applied to the start time of a tumbling window when evaluating dependency, pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     *
     * @return the offset value
     */
    public String offset() {
        return this.offset;
    }

    /**
     * Set timespan applied to the start time of a tumbling window when evaluating dependency, pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     *
     * @param offset the offset value to set
     * @return the SelfDependencyTumblingWindowTriggerReference object itself.
     */
    public SelfDependencyTumblingWindowTriggerReference withOffset(String offset) {
        this.offset = offset;
        return this;
    }

    /**
     * Get the size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used, pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     *
     * @return the size value
     */
    public String size() {
        return this.size;
    }

    /**
     * Set the size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used, pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     *
     * @param size the size value to set
     * @return the SelfDependencyTumblingWindowTriggerReference object itself.
     */
    public SelfDependencyTumblingWindowTriggerReference withSize(String size) {
        this.size = size;
        return this;
    }

}
