/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.containerservice.v2017_08_31.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.containerservice.v2017_08_31.AccessProfiles;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.management.containerservice.v2017_08_31.ManagedClusterAccessProfile;

class AccessProfilesImpl extends WrapperImpl<ManagedClustersInner> implements AccessProfiles {
    private final ContainerServiceManager manager;

    AccessProfilesImpl(ContainerServiceManager manager) {
        super(manager.inner().managedClusters());
        this.manager = manager;
    }

    public ContainerServiceManager manager() {
        return this.manager;
    }

    private ManagedClusterAccessProfileImpl wrapModel(ManagedClusterAccessProfileInner inner) {
        return  new ManagedClusterAccessProfileImpl(inner, manager());
    }

    @Override
    public Observable<ManagedClusterAccessProfile> getByManagedClusterAsync(String resourceGroupName, String resourceName, String roleName) {
        ManagedClustersInner client = this.inner();
        return client.getAccessProfilesAsync(resourceGroupName, resourceName, roleName)
        .map(new Func1<ManagedClusterAccessProfileInner, ManagedClusterAccessProfile>() {
            @Override
            public ManagedClusterAccessProfile call(ManagedClusterAccessProfileInner inner) {
                return wrapModel(inner);
            }
       });
    }

}
